on:
  push:
    branches: [ 'master' ]
  pull_request:
    branches: [ 'master' ]

permissions:
  contents: read

jobs:
  run:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        php-versions: [ '5.3', '5.4', '5.5', '5.6', '7.0', '7.1', '7.2', '7.3', '7.4', '8.0', '8.1', '8.2', '8.3' ]

    env:
      DB_DATABASE: demo
      DB_USER: root
      DB_PASSWORD: password

    name: Run Unit Test on PHP ${{ matrix.php-versions }}
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Run MySQL
      run: |
        sudo /etc/init.d/mysql start
        mysql -u $DB_USER -p $DB_PASSWORD -e "CREATE DATABASE IF NOT EXISTS $DB_DATABASE;"
        mysql -u $DB_USER -p $DB_PASSWORD -e "USE $DB_DATABASE; CREATE TABLE IF NOT EXISTS `post` ( `id` int(10) NOT NULL AUTO_INCREMENT, `subject` varchar(100) NOT NULL, `message` varchar(500) NOT NULL, `user_id` int(10) NOT NULL, `description` varchar(100) DEFAULT NULL, PRIMARY KEY (`id`), UNIQUE KEY `description` (`description`), KEY `user_id` (`user_id`) ) ENGINE=InnoDB DEFAULT CHARSET=latin1 AUTO_INCREMENT=1;"
        mysql -u $DB_USER -p $DB_PASSWORD -e "USE $DB_DATABASE; CREATE TABLE IF NOT EXISTS `user` ( `id` int(10) NOT NULL AUTO_INCREMENT, `name` varchar(200) NOT NULL, `age` int(2) NOT NULL, `gender` varchar(10) NOT NULL, PRIMARY KEY (`id`) ) ENGINE=InnoDB DEFAULT CHARSET=latin1 AUTO_INCREMENT=1;"
        mysql -u $DB_USER -p $DB_PASSWORD -e "USE $DB_DATABASE; ALTER TABLE `post` ADD CONSTRAINT `post_user_id_foreign` FOREIGN KEY (`user_id`) REFERENCES `user` (`id`) ON DELETE CASCADE ON UPDATE CASCADE;"

    - name: Install PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ matrix.php-versions }}

    - name: Check the PHP version
      run: php -v

    - name: Validate composer.json and composer.lock
      run: composer validate --strict

    - name: Install dependencies
      run: composer install --prefer-dist --no-progress

    - name: Run test suite
      run: vendor/bin/phpunit --coverage-clover=coverage.clover

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4-beta
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}