on:
  push:
    branches: [ 'master' ]
  pull_request:
    branches: [ 'master' ]

permissions:
  contents: read

jobs:
  run:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        php-versions: [ '5.3', '5.4', '5.5', '5.6', '7.0', '7.1', '7.2', '7.3', '7.4', '8.0', '8.1', '8.2', '8.3' ]

    services:
      mysql:
        image: mysql:5
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=5 -e MYSQL_ROOT_PASSWORD=root -e MYSQL_DATABASE=desc --entrypoint sh mysql:5 -c "exec docker-entrypoint.sh mysqld --default-authentication-plugin=mysql_native_password --character-set-server=utf8 --collation-server=utf8_unicode_ci"

    name: Run Unit Test on PHP ${{ matrix.php-versions }}

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Run the MySQL server
      run: |
        sudo /etc/init.d/mysql start
        mysql -uroot -proot -e 'CREATE DATABASE IF NOT EXISTS `desc`;'
        mysql -uroot -proot -e 'USE `desc`; CREATE TABLE IF NOT EXISTS `post` ( `id` int(10) NOT NULL AUTO_INCREMENT, `subject` varchar(100) NOT NULL, `message` varchar(500) NOT NULL, `user_id` int(10) NOT NULL, `description` varchar(100) DEFAULT NULL, PRIMARY KEY (`id`), UNIQUE KEY `description` (`description`), KEY `user_id` (`user_id`) ) AUTO_INCREMENT=1;'
        mysql -uroot -proot -e 'USE `desc`; CREATE TABLE IF NOT EXISTS `user` ( `id` int(10) NOT NULL AUTO_INCREMENT, `name` varchar(200) NOT NULL, `age` int(2) NOT NULL, `gender` varchar(10) NOT NULL, PRIMARY KEY (`id`) ) AUTO_INCREMENT=1;'
        mysql -uroot -proot -e 'USE `desc`; ALTER TABLE `post` ADD CONSTRAINT `post_user_id_foreign` FOREIGN KEY (`user_id`) REFERENCES `user` (`id`) ON DELETE CASCADE ON UPDATE CASCADE;'

    - name: Install PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ matrix.php-versions }}

    - name: Check the PHP version
      run: php -v

    - name: Validate composer.json and composer.lock
      run: composer validate --strict

    - name: Install dependencies
      run: composer install --prefer-dist --no-progress

    - name: Run test suite
      run: vendor/bin/phpunit --coverage-clover=coverage.clover

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4-beta
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}